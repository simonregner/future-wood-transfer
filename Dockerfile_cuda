# Use the official NVIDIA CUDA base image
FROM nvidia/cuda:12.4.0-runtime-ubuntu20.04

# Set environment variables for non-interactive installation
ENV DEBIAN_FRONTEND=noninteractive

# Install dependencies
RUN apt-get update && apt-get install -y \
    python3.9 \
    python3-pip \
    wget \
    git \
    lsb-release \
    gnupg \
    curl \
    libgl1 libglib2.0-0 libsm6 libxrender1 libxext6 \
    && rm -rf /var/lib/apt/lists/*


# Set Python3 as the default
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.9 1

# Install pip for Python 3.11
RUN curl -sS https://bootstrap.pypa.io/get-pip.py | python3.9

# Install other Python dependencies for your script
COPY requirements.txt /tmp/requirements.txt
RUN pip install -r /tmp/requirements.txt

# Add NVIDIA Container Toolkit
RUN curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | apt-key add - \
    && distribution=$( . /etc/os-release; echo $ID$VERSION_ID ) \
    && curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | tee /etc/apt/sources.list.d/nvidia-docker.list \
    && apt-get update \
    && apt-get install -y nvidia-container-toolkit

# Update and install necessary packages
RUN apt-get update && \
    apt-get install -y gnupg2 lsb-release curl && \
    curl -sSL "https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc" | apt-key add - && \
    echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list && \
    apt-get update && \
    apt-get install -y ros-noetic-desktop-full python3-catkin-tools python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Set up ROS environment
SHELL ["/bin/bash", "-c"]
RUN echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc
RUN echo "source ~/.bashrc"

# Set environment variables for ROS
ENV ROS_DISTRO=noetic
ENV ROS_PACKAGE_PATH=/opt/ros/noetic/share

# Install PyYAML manually to avoid conflicts
#RUN apt-get install -y python3-yaml

# Install PyTorch (CUDA 12.4 compatible)
RUN pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu124


# Copy your Python script to the container
COPY . /detection

# Set the working directory
WORKDIR /detection

# Command to run your Python script
CMD ["python", "road_detection.py"]